<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.platform.core.persistence.mapper.sys.SysUserRoleMapper">

	<resultMap type="com.github.platform.core.sys.domain.common.entity.SysUserRoleBase" id="BaseResultMap">
		<id column="user_id" property="userId"/>
		<id column="role_id" property="roleId"/>
		<id column="role_key" property="roleKey"/>
		<id column="tenant_id" property="tenantId"/>
		<id column="create_by" property="createBy"/>
		<id column="create_time" property="createTime"/>
	</resultMap>

	<sql id="BaseColumnList">
		t.user_id,
		t.role_id,
		t.role_key,
		t.tenant_id,
		t.create_by,
		t.create_time
	</sql>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.github.platform.core.sys.domain.common.entity.SysUserRoleBase">
		insert into t_sys_user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">user_id,</if>
			<if test="roleId != null">role_id,</if>
			<if test="roleKey != null and roleKey != ''">role_key,</if>
			<if test="tenantId != null">tenant_id,</if>
			<if test="createBy != null and createBy != ''">create_by,</if>
			<if test="createTime != null">create_time,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">#{userId},</if>
			<if test="roleId != null">#{roleId},</if>
			<if test="roleKey != null and roleKey != ''">#{roleKey},</if>
			<if test="tenantId != null">#{tenantId},</if>
			<if test="createBy != null and createBy != ''">#{createBy},</if>
			<if test="createTime != null">#{createTime},</if>
		</trim>
	</insert>

	<insert id="insertList"  parameterType="java.util.List">
		insert into  t_sys_user_role
		(user_id,role_id,role_key,tenant_id,create_by,create_time)
		values
		<foreach item="item"  collection="list"  separator=","  >
		(#{item.userId},#{item.roleId},#{item.roleKey},#{item.tenantId},#{item.createBy},#{item.createTime})
		</foreach>
	</insert>

	<update id="updateById" parameterType="com.github.platform.core.sys.domain.common.entity.SysUserRoleBase">
		update   t_sys_user_role
 		 <set>
 			 <if test="roleId != null">role_id = #{roleId},</if>
 			 <if test="tenantId != null">tenant_id = #{tenantId},</if>
 		 </set>
     where user_id = #{userId}
	</update>
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select <include refid="BaseColumnList" /> from t_sys_user_role t where t.user_id=#{userId}
	</select>
	<select id="findByIds" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select <include refid="BaseColumnList" /> from t_sys_user_role t
		<where>
			<foreach item="id"  collection="ids" open="t.user_id  in (" separator="," close=")" >
				#{id}
			</foreach>
		</where>
		limit 200
	</select>
	<select id="findListBy" resultMap="BaseResultMap" parameterType="com.github.platform.core.sys.domain.common.entity.SysUserRoleBase">
		select 
 		<include refid="BaseColumnList" />
 		from t_sys_user_role t
 		<where>
 			<if test="userId != null"> and t.user_id = #{userId} </if>
 			<if test="roleId != null"> and t.role_id = #{roleId} </if>
		    <if test="roleKey != null and roleKey !=''">  and t.role_key = #{roleKey} </if>
			<if test="tenantId != null"> and t.tenant_id = #{tenantId} </if>
		</where>
	</select>
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from t_sys_user_role where user_id = #{userId}
	</delete>
	<delete id="deleteByIds" parameterType="java.lang.Long">
		<!--没有传入数据抛异常，不会全删-->
		<if test="ids != null and ids.length>0">
			delete from t_sys_user_role
			<where>
				<foreach item="id"  collection="ids" open="user_id  in (" separator="," close=")" >
					#{id}
				</foreach>
			</where>
		</if>
	</delete>
</mapper>